{"version":3,"sources":["App.module.css","redux/actions/actionType.js","redux/reducers/counter.js","redux/rootReducer.js","App.js","redux/actions/action.js","reportWebVitals.js","index.js"],"names":["module","exports","changeCounterHandler","initialState","counter","combineReducers","state","action","type","payload","App","className","classes","this","props","onClick","React","Component","connect","dispatch","number","onChangeCounter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","createStore","rootReducer","application","ReactDOM","render","document","getElementById"],"mappings":"0FACAA,EAAOC,QAAU,CAAC,IAAM,mB,8GCDXC,EAAuB,uBCE9BC,EAAe,CACjBC,QAAS,GCAEC,kBAAgB,CAC3BD,QDEW,WAAgD,IAA/BE,EAA8B,uDAAtBH,EAAcI,EAAQ,uCAC1D,OAAQA,EAAOC,MACX,KAAKN,EACD,MAAO,CACHE,QAASE,EAAMF,QAAUG,EAAOE,SAExC,QACI,OAAOH,M,4DERbI,E,4JACF,WAAU,IAAD,OACL,OACI,sBAAKC,UAAWC,IAAQF,IAAxB,UACI,2CAAa,iCAASG,KAAKC,MAAMV,aACjC,gCACI,wBAAQW,QAAS,kBAAM,EAAKD,MAAMZ,qBAAqB,IAAvD,uEACA,wBAAQa,QAAS,kBAAM,EAAKD,MAAMZ,sBAAsB,IAAxD,wDAEJ,gCACI,wBAAQa,QAAS,kBAAM,EAAKD,MAAMZ,qBAAqB,KAAvD,wEACA,wBAAQa,QAAS,kBAAM,EAAKD,MAAMZ,sBAAsB,KAAxD,gE,GAXFc,IAAMC,WA8BTC,mBAZf,SAAyBZ,GACrB,MAAO,CACHF,QAASE,EAAMF,QAAQA,YAI/B,SAA4Be,GACxB,MAAO,CACHjB,qBAAsB,SAAAkB,GAAM,OAAID,EC7BjC,SAAyBC,GAC5B,MAAO,CACHZ,KAAMN,EACNO,QAASW,GD0BgCC,CAAgBD,QAIlDF,CAA6CR,GEvB7CY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCERQ,G,MAAQC,YAAYC,IAEpBC,EACF,cAAC,IAAD,CAAUH,MAAOA,EAAjB,SACI,cAAC,EAAD,MAIRI,IAASC,OAAOF,EAAaG,SAASC,eAAe,SACrDhB,M","file":"static/js/main.0719891e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__16ZpL\"};","export const changeCounterHandler = 'changeCounterHandler'\n\n","import {changeCounterHandler} from '../actions/actionType'\n\nconst initialState = {\n    counter: 0\n}\n\nexport default function counter(state = initialState, action) {\n    switch (action.type) {\n        case changeCounterHandler:\n            return {\n                counter: state.counter + action.payload,\n            }\n        default:\n            return state\n    }\n}","import {combineReducers} from 'redux'\nimport counter from \"./reducers/counter\";\n\nexport default combineReducers({\n    counter\n})","import React from 'react'\nimport {connect} from 'react-redux'\nimport {onChangeCounter} from './redux/actions/action'\nimport classes from './App.module.css'\n\nclass App extends React.Component {\n    render() {\n        return (\n            <div className={classes.App}>\n                <h1>Counter: <strong>{this.props.counter}</strong></h1>\n                <div>\n                    <button onClick={() => this.props.changeCounterHandler(1)}>Прибавить +1</button>\n                    <button onClick={() => this.props.changeCounterHandler(-1)}>Отнять -1</button>\n                </div>\n                <div>\n                    <button onClick={() => this.props.changeCounterHandler(10)}>Прибавить +10</button>\n                    <button onClick={() => this.props.changeCounterHandler(-10)}>Отнять -10</button>\n                </div>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        counter: state.counter.counter\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        changeCounterHandler: number => dispatch(onChangeCounter(number))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n","import {changeCounterHandler} from './actionType'\n\nexport function onChangeCounter(number) {\n    return {\n        type: changeCounterHandler,\n        payload: number\n    }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {Provider} from 'react-redux'\nimport {createStore} from 'redux'\nimport rootReducer from './redux/rootReducer'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport './index.css'\n\nconst store = createStore(rootReducer)\n\nconst application = (\n    <Provider store={store}>\n        <App/>\n    </Provider>\n)\n\nReactDOM.render(application, document.getElementById('root'))\nreportWebVitals()\n"],"sourceRoot":""}